name: Java CI/CD Pipeline with Maven

on:
  #Manually trigger runs
  workflow_dispatch:
  #Trigger workflow on push from main
  push:
    branches: [ main ]
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  gitleaks:
    name: Gitleaks Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: gitleaks-action
        uses: zricethezav/gitleaks-action@master

  tests:
    name: Unit Tests
    needs: [ gitleaks ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      #Set up Maven cache
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Run Tests
        run: mvn -B test

  sonar:
    name: SonarCloud Analysis
    needs: [ gitleaks ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
#          fetch-depth: 0
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      #Analyze project with SonarCloud
      - name: Clone Repo
        uses: actions/checkout@v2
#      - name: Analyze with SonarCloud
#        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Analyze with SonarCloud
        run: mvn -B verify sonar:sonar -Dsonar.qualitygate.wait=true
#        run: mvn -B verify sonar:sonar -Dsonar.projectKey=kawak1320_ci-final-project -Dsonar.organization=ci-finalproject -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#      - name: Analyze with SonarCloud
#        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#          JAVA_HOME: ''

  build:
    name: Build
    #Make Sonar run Build job parallel to Tests job and build only when these steps do not fail
    needs: [ sonar, tests ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: '11'
    - name: Setup Maven settings.xml
      uses: whelk-io/maven-settings-xml-action@v11
      with:
        servers: |
          [
            {
              "id": "artifactory",
              "username": "${env.ARTIFACTORY_USERNAME_REF}",
              "password": "${env.ARTIFACTORY_TOKEN_REF}"
            }
          ]
#   Adding Cache Action to build stage
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
#    - name: Build with Maven
#      run: mvn -B package -DskipTests --file pom.xml
    - name: Build with Maven
      env:
        ARTIFACTORY_USERNAME_REF: "devops"
        ARTIFACTORY_TOKEN_REF: ${{ secrets.ARTIFACTORY_TOKEN }}
        BUILD_ENV: 'github-actions'
      run: mvn -B package -DskipTests --file pom.xml
#    Upload artifacts workflow allowing to share data between jobs and store data once a workflow is complete.
    - name: Upload JAR
      uses: actions/upload-artifact@v2
      with:
        name: build-artifact
        path: ${{ github.workspace }}